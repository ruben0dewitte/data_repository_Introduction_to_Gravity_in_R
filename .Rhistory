################################################################################
# MASTER file for data repository "An Introduction to Gravity in R"
# Ruben Dewitte
# March 2022
################################################################################
# SETUP -------------------------------------------------------------------
# Load libraries
library(here) #easy file referencing, root is set at project root
# Setup - Define global variables -------------------------------------------------------------------
source(here("code","01_setup.R"))
# Dataprep - Prepare the data ----------------------------------------------------------------
source(here("code","03_dataprep.R"))
# Analysis ----------------------------------------------------------------
source(here("code","04_TraditionalGravityEstimates.R"))
source(here("code","05_DistancePuzzle.R"))
source(here("code","06_RTAs.R"))
##############################################################
# Data preparation
##############################################################
# SETUP -------------------------------------------------------------------
# Load packages
library(tidyverse)
library(here) # easy file referencing, root is set at project root
library(fixest) # perform estimations with multiple fixed-effects
library(flextable) # Output tables to word
library(huxtable) # Output tables
# Load data ---------------------------------------------------------------
x = read_csv(here("output","agtpa_applications.csv"))
# 1. Naive Gravity -----------------------------------------------------------
## Select necessary data
x_app1 = x %>%
filter(year %in% seq(1986, 2006, 4))
## Construct symmetric pair id's
x_app1 = x_app1 %>%
mutate(pair = paste(pmin(exporter,importer),pmax(exporter,importer),sep = "_")) %>%
group_by(pair) %>%
mutate(pair_id = cur_group_id())
## construct exporter output and importer expenditure
x_app1 = x_app1 %>%
group_by(exporter,year) %>%
mutate(Y_it = sum(trade)) %>%
group_by(importer,year) %>%
mutate(E_jt = sum(trade))
## calculate logs
x_app1 = x_app1 %>%
mutate(across(c(trade,Y_it,E_jt,dist),~log(.x),.names="ln_{.col}"))
## Estimation
fit_ols = feols(ln_trade ~ ln_dist + cntg + lang + clny + ln_Y_it + ln_E_jt,
data = x_app1 %>%
filter(trade > 0 & exporter != importer),
vcov = cluster ~ pair_id)
summary(fit_ols)
# 2. Proxy for multilateral resistance ------------------------------------
## Calculate remoteness indices
x_app1 = x_app1 %>%
group_by(year) %>%
mutate(Y_t = sum(Y_it), E_t = sum(E_jt)) %>%
group_by(exporter, year) %>%
mutate(remoteness_exp = sum(dist *  E_jt / E_t)) %>%
group_by(importer, year) %>%
mutate(remoteness_imp = sum(dist / (Y_it / Y_t))) %>%
mutate(ln_remoteness_exp = log(remoteness_exp),
ln_remoteness_imp = log(remoteness_imp))
## Estimation
fit_remoteness = feols(ln_trade ~ ln_dist + cntg + lang + clny + ln_Y_it +
ln_E_jt + ln_remoteness_exp + ln_remoteness_imp,
data = x_app1 %>% filter(trade > 0 & exporter != importer),
vcov = cluster ~ pair_id)
summary(fit_remoteness)
fit_remoteness
x_app1 = x_app1 %>%
group_by(year) %>%
mutate(Y_t = sum(Y_it), E_t = sum(E_jt)) %>%
group_by(exporter, year) %>%
mutate(remoteness_exp = sum(dist /(E_jt / E_t))) %>%
group_by(importer, year) %>%
mutate(remoteness_imp = sum(dist / (Y_it / Y_t))) %>%
mutate(ln_remoteness_exp = log(remoteness_exp),
ln_remoteness_imp = log(remoteness_imp))
## Estimation
fit_remoteness = feols(ln_trade ~ ln_dist + cntg + lang + clny + ln_Y_it +
ln_E_jt + ln_remoteness_exp + ln_remoteness_imp,
data = x_app1 %>% filter(trade > 0 & exporter != importer),
vcov = cluster ~ pair_id)
summary(fit_remoteness)
################################################################################
# MASTER file for data repository "An Introduction to Gravity in R"
# Ruben Dewitte
# March 2022
################################################################################
# SETUP -------------------------------------------------------------------
# Load libraries
library(here) #easy file referencing, root is set at project root
# Setup - Define global variables -------------------------------------------------------------------
source(here("code","01_setup.R"))
# Dataprep - Prepare the data ----------------------------------------------------------------
source(here("code","03_dataprep.R"))
# Analysis ----------------------------------------------------------------
source(here("code","04_TraditionalGravityEstimates.R"))
source(here("code","05_DistancePuzzle.R"))
source(here("code","06_RTAs.R"))
################################################################################
# MASTER file for data repository "An Introduction to Gravity in R"
# Ruben Dewitte
# March 2022
################################################################################
# SETUP -------------------------------------------------------------------
# Load libraries
library(here) #easy file referencing, root is set at project root
# Setup - Define global variables -------------------------------------------------------------------
source(here("code","01_setup.R"))
# Dataprep - Prepare the data ----------------------------------------------------------------
source(here("code","03_dataprep.R"))
# Analysis ----------------------------------------------------------------
source(here("code","04_TraditionalGravityEstimates.R"))
source(here("code","05_DistancePuzzle.R"))
source(here("code","06_RTAs.R"))
